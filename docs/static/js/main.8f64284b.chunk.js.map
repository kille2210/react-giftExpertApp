{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAG3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCJdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0FAE8EC,UAAUH,GAFxF,uBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCDXO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OAFAc,QAAQC,IAAIL,EAAOV,GAGf,sBAAKgB,UAAU,6BAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCLHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAdAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAK1B,CAACtB,IAGGuB,EDnB0BK,CAAc5B,GAAlCa,EAHwB,EAG7BN,KAAae,EAHgB,EAGhBA,QAGrB,OACI,qCACI,oBAAIJ,UAAW,wCAAf,SAAwDlB,IAGtDsB,GAAW,mBAAGJ,UAAU,mCAAb,sBAEb,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEjBxBkB,EAAe,WAAO,IAAD,EAGO3C,mBAAS,CAAC,cAHjB,mBAGtB4C,EAHsB,KAGV7C,EAHU,KAa9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAaA,GADNA,Y,MCvB/B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8f64284b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // para manejar el enter\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            //Para que la categoría solicitada aparezca al comienzo, se cambia el orden de la sig. instruccion \r\n            //setCategories(cats => [...cats, inputValue]);\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","\r\n\r\n\r\n    export const getGifs = async ( category ) => {\r\n        //El encodeURI es para reemplazar los espacios entre otras cosas\r\n        const url =  `https://api.giphy.com/v1/gifs/search?api_key=g1BIW0NCy2EQsAjk55ZTqI8UrPo98XnQ&q=${ encodeURI(category) }&limit=10;`;\r\n\r\n        const resp = await fetch(url);\r\n\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n\r\n        //setImages(gifs);\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    console.log(title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__bounceInDown\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n     //LLanada al HOOKS\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n   \r\n    return (\r\n        <>\r\n            <h3 className= \"animate__bounceInDown animate__fadeIn\">{category}</h3>\r\n\r\n            {/* Esto es JAVASCRIPT */}\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem    \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //Este código solo se dispara cuando el componente es renderizado por primera vez o si la category cambia\r\n    //Los Effect no puedes ser async\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n  \r\n\r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n     const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     //setcategories([...categories, 'Bug Bunny']);\r\n    //    setcategories(cats => [...cats, 'Bugs Bunny']);\r\n    //     //    Para incluirlo al inicio, se usaría al reves\r\n    //     // setcategories(['Mafalda',...categories]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key= { category }\r\n                        category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}